#!/bin/bash

# -- Functions

help () {
	echo "Usage: wp-migrate-ssh.sh -m [m|fo|do] -sh <source hostname> -su <source user> -d <domain name> [OPTIONS]...

Migrate WordPress sites using ssh/rsync/wp-cli - Created by jordantrizz (https://github.com/jordantrizz/wp-migrate-ssh

	Choose a mode -m:	
		m		migrate - run migration
		fo		file-only - only copy over files.
		do		database-only - only copy over the database.
		pmo		post-migration-only - only run any post migration steps.
	
	Required Options:
		-sh		Source IP/Hostname.
		-su		Source User
		-d		Domain Name of site to be migrated

	Optional:
        	--debug		Print debug messages
		-sd		Set source directory, defaults to public_html
		-dd		Set destination directory, defaults to public_html
		-tu		Temporary URL, not used if not defined.
		-pc		Post migration custom wp-cli commands.
"
        exit
}

cleanup () {
	wp --path=$dst_dir --skip-themes --skip-plugins cache flush
}

ssh_init () {
                # Let's get the SSH password
                # Read password interactively and save it to the environment
                read -s -p "Password to use: " SSHPASS
                export SSHPASS

                # Grab the database. Need to fix path issues.
                sshpass -p "$SSHPASS" ssh $src_user@$src_ip "/usr/local/sbin/wp --path=$src_dir db export ~/$src_db_bkup"
                sshpass -p "$SSHPASS" scp $src_user@$src_ip:~/$src_user-wp-sql.sql .
}

migrate_files () {
	# Copy files. Should only show one line progress updated.
        sshpass -p "$SSHPASS" rsync -r --progress $src_user@$src_ip:$src_dir/wp-content $dst_dir --exclude "wp-content/cache" --exclude "infinitewp/backups" --exclude "uploads/backwpup*"
}

migrate_database () {
        # Variables
        src_db_bkup=$src_user-wp-sql.sql

        # Import the database.
        wp --path=$dst_dir db reset
        wp --path=$dst_dir db import $src_db_bkup
        # Disabled cause this can go wrong.
	#rm $src_db_bkup
}

post_temp_url () {
        wp --path=$dst_dir plugin install multiple-domain --activate
        wp --path=$dst_dir --format=json option set multiple-domain-domains '{"'$domain'":{"base":null,"lang":null,"protocol":"auto"},"'$temp_url'":{"base":null,"lang":null,"protocol":"auto"}}'
	wp --path=$dst_dir --skip-themes --skip-plugins search-replace $domain $temp_url
}

# -- Parse Command Line Arguments https://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash
POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    --debug)
    debug="1"
    shift # past argument
    ;;
    -m)
    mode="$2"
    shift # past argument
    ;;
    -sh)
    src_ip="$2"
    shift # past argument
    shift # past value
    ;;
    -su)
    src_user="$2"
    shift # past argument
    shift # past value
    ;;
    -sd)
    src_dir="$2"
    shift # past argument
    shift # past value
    ;;
    -d)
    domain="$2"
    shift # past argument
    shift # past value
    ;;
    -tu)
    temp_url="$2"
    shift # past argument
    shift # past value
    ;;
    -dd)
    dst_dir="$2"
    shift # past argument
    shift # past value
    ;;
    -pc)
    post-commands="$2"
    shift # past argument
    shift # past value
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

if [[ -n $1 ]]; then
    unknown_options=$1
fi

if [[ $mode = 'm' ]]; then
	if [ -z "$src_ip" ]; then echo "Missing required option -sh"; exit; fi
	if [ -z "$src_user" ]; then echo "Missing required option -su"; exit ; fi
	if [ -z "$domain" ]; then echo "Missing required option -d"; exit; fi
	if [ -z "$src_dir" ]; then src_dir="public_html"; fi
	if [ -z "$dst_dir" ]; then src_dir="public_html"; fi

	ssh_init
	migrate_database
	migrate_files		
		
	# Temporary URL
	if [ -z "$temp_url" ]; then
		post_temp_url
	fi
	
	# Specify wp-cli commands after migration is completed
	if [ -z "$pc"]; then
		echo "Not implemented yet"
	fi
	
	# Install plugins - Future Use
	#if [ -z "$plugins" ]; then
        #	wp --path=$dst_dir plugin install --activate $plugins
	#fi
elif [[ $mode = 'fo' ]]; then
        if [ -z "$src_ip" ]; then echo "Missing required option -sh"; exit; fi
        if [ -z "$src_user" ]; then echo "Missing required option -su"; exit ; fi
        echo 'Files only'
	ssh_init
       	migrate_files
elif [[ $mode = 'do' ]]; then
        if [ -z "$src_ip" ]; then echo "Missing required option -sh"; exit; fi
        if [ -z "$src_user" ]; then echo "Missing required option -su"; exit ; fi
	echo 'Database only'
	echo 'Not implemented yet'
	# database-only-cmd
elif [[ $mode = 'pmo' ]]; then
        if [ -z $dst_dir ]; then eho "You need to provide a destination directory using -dd"; exit; fi
        post-migration
else
	help
fi

# Divi will fail to load if you don't update this.
# Also need to investigate recently_edited option
#if [ -z "$divifix" ]; then
#	wp --path=$dst_dir option delete _transient_et_core_path 
#fi
# clear the exported variable containing the password
unset SSHPASS